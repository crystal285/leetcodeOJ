//double dp, pay attention to the initial state
public class Solution {
    public int minCut(String s) {
        if(s == null || s.length() == 0)
            return 0;
        int n = s.length();
        boolean[][] check = new boolean[n][n];
        int[] dp = new int[n];
        for(int i = 0; i < n; i++)
            dp[i] = Integer.MAX_VALUE;
        for(int i = n-1; i >= 0; i--)
        {
            for(int j = i; j < n; j++)
            {
                if(((j-i) < 3 || check[i+1][j-1]) && s.charAt(i) == s.charAt(j))
                    check[i][j] = true;
                
                if(check[i][j])
                {
                    if(j == n-1)
                        dp[i] = 0;
                    else dp[i] = Math.min(dp[i],dp[j+1]+1);
                }
            }
        }
        return dp[0];
    }
}

