//concise version
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> lists = new ArrayList<List<Integer>>();
        List<Integer> list = new ArrayList<Integer>();
        if(root == null)
            return lists;
        find(root,sum,lists,list);
        return lists;
    }
    public void find(TreeNode node, int sum, List<List<Integer>> lists,List<Integer> list)
    {
        if(node == null)
            return;
        list.add(node.val);
        if(node.right == null && node.left == null && node.val == sum)
        {
                lists.add(new ArrayList(list));
        }
            find(node.left,sum-node.val,lists,list);
            find(node.right,sum-node.val,lists,list);
            list.remove(list.size()-1);
    }
}