public class Solution {
    public int atoi(String str) {
        if(str == null || str.length() == 0)
            return 0;
        int i = 0;
        while(i < str.length())
        {
            if(Character.isWhitespace(str.charAt(i)))
                i++;
            else
                break;
        }
        if(i == str.length())
            return 0;
        if(!Character.isDigit(str.charAt(i)) && (str.charAt(i) != '+' && str.charAt(i) != '-'))
            return 0;
        int prefix = 1;
        if(str.charAt(i) == '-')
        {
            prefix = -1;
            i++;
        }
        else if(str.charAt(i) == '+')
        {
            i++;
        }
        if(i == str.length() || !Character.isDigit(str.charAt(i)))
            return 0;
        int j = i;
        while(j < str.length() && Character.isDigit(str.charAt(j)))
            j++;
        long sum = 0;
        for(int k = i; k < j; k++)
        {
           if(sum*prefix > Integer.MAX_VALUE/10) 
           {
                return Integer.MAX_VALUE;
           }
           if(sum*prefix < Integer.MIN_VALUE/10) 
           {
                return Integer.MIN_VALUE;
           }
           sum = sum*10 + (str.charAt(k)-'0');
        }
        if(prefix*sum > Integer.MAX_VALUE)
            return Integer.MAX_VALUE;
        if(prefix*sum < Integer.MIN_VALUE)
            return Integer.MIN_VALUE;
        return (int) (prefix*sum);
        
    }
}